{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","visibleGoods","goods","console","log","ALPHABET","sort","LENGTH","a","b","length","reverse","getReorderedGoods","className","type","onClick","setState","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdG,EA9CH,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUD,EACZ,EADYA,WAENI,EAAY,YAAOC,GAKzB,OAFAC,QAAQC,IAAIN,EAAUD,GAEdC,GACN,KAAKL,EAASM,KACZ,MAEF,KAAKN,EAASY,SACZJ,EAAaK,OACb,MAEF,KAAKb,EAASc,OACZN,EAAaK,MAAK,SAACE,EAAGC,GAAJ,OAAWD,EAAEE,OAASD,EAAEC,UAC1C,MAEF,QAEEP,QAAQC,IAAI,qBAGhB,OAAKP,EAIEI,EAHEA,EAAaU,UAmBCC,CACnBlB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAElB,SAAUL,EAASY,YAClDQ,UAAWI,IACT,SACA,UACA,CAAE,WAAYnB,IAAaL,EAASY,WANxC,iCAaA,wBACES,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAElB,SAAUL,EAASc,UAClDM,UAAWI,IACT,SACA,aACA,CAAE,WAAYnB,IAAaL,EAASc,SANxC,4BAaA,wBACEO,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEnB,YAAaA,KAC5CgB,UAAWI,IACT,SACA,aACA,CAAE,YAA2B,IAAfpB,IANlB,sBAYEC,IAAaL,EAASM,OAASF,IAC/B,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAM,EAAKC,SAAS,CAC3BlB,SAAUL,EAASM,KAAMF,YAAY,KAJzC,sBAYJ,6BACGI,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,eAvEnB,GAAyBC,IAAMC,WChE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3ecd583a.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  switch (sortType) {\n    case SortType.NONE:\n      break;\n\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => (a.length - b.length));\n      break;\n\n    default:\n      // eslint-disable-next-line no-console\n      console.log('error of sortType');\n  }\n\n  if (!isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: true,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ sortType: SortType.ALPHABET })}\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ sortType: SortType.LENGTH })}\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ isReversed: !isReversed })}\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed === true },\n            )}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || !isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.setState({\n                sortType: SortType.NONE, isReversed: true,\n              })}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}